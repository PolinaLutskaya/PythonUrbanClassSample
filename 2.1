class GreenZoneIndex:
    def __init__(self, territory_name, territory_area, green_zones):

        """
        :param territory_name: Название территории
        :param territory_area: Площадь территории
        :param green_zones: Список площадей парков
        """
        # TODO все аргументы конструктора записать в атрибуты экземпляра класса
        
        # TODO посчитать индекс озеленения с помощью метода calculate_green_index
        self.territory_name = territory_name
        self.territory_area = territory_area
        self.green_zones = green_zones
        self.green_index = self.calculate_green_index() # индекс озеленения

    def calculate_green_index(self):
      green_index = sum(self.green_zones)/self.territory_area

      return round(green_index * 100,2)
      
      
      
      list_territories = [
    {
        "territory_name": "Пушкин",
        "territory_area": 28676,
        "green_zones": [302, 487, 420, 325, 471, 363, 404]
    },
    {
        "territory_name": "Павловск",
        "territory_area": 21025,
        "green_zones": [360, 375, 223, 258, 345, 296, 303]
    },
    {
        "territory_name": "Петергоф",
        "territory_area": 44274,
        "green_zones": [364, 447, 438, 223, 336, 431, 442]
    },
]

list_green_index=[]

for city_dict in list_territories:
    territory_name = city_dict.get("territory_name")
    territory_area = city_dict.get("territory_area")
    green_zones = city_dict.get("green_zones")

    chislo = GreenZoneIndex(territory_name, territory_area,green_zones)
    chislo.green_index

    list_green_index.append(chislo.green_index)
    print(f"Индекс озеленения территории {chislo.territory_name} равен {chislo.green_index}%")

print(list_green_index)
    
